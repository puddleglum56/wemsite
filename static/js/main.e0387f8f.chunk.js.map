{"version":3,"sources":["redux/animatingSlice.js","resources/logo_and_back.svg","resources/red_back.svg","redux/rotatedSlice.js","redux/hoveredMenuItemSlice.js","components/menu-item/MenuItem.js","resources/arrow_back_ios_white_24dp.svg","components/back-button/BackButton.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["animatingSlice","createSlice","name","initialState","value","reducers","setAnimating","state","action","payload","actions","rotatedSlice","toggleRotated","hoveredMenuItemSlice","setHoveredMenuItem","MenuItem","props","dispatch","useDispatch","className","onClick","onMouseEnter","item","toUpperCase","BackButton","src","backIcon","alt","App","rotated","useSelector","animating","hoveredMenuItem","disappearRef","useSpringRef","rotateRef","slideRef","rotateProps","useSpring","to","rotateZ","ref","onStart","onRest","slideProps","translateX","translateY","disappearProps","underlineProps","marginLeft","width","useChain","div","style","redBackground","logoBack","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","rotatedReducer","animatingReducer","hoveredMenuItemReducer","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0387f8f.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const animatingSlice = createSlice({\r\n  name: 'animating',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setAnimating: (state, action) => {\r\n      state.value = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setAnimating } = animatingSlice.actions\r\n\r\nexport default animatingSlice.reducer","export default __webpack_public_path__ + \"static/media/logo_and_back.0480689c.svg\";","export default __webpack_public_path__ + \"static/media/red_back.3c9f6d28.svg\";","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const rotatedSlice = createSlice({\r\n  name: 'rotated',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    toggleRotated: (state) => {\r\n      state.value = !state.value\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { toggleRotated } = rotatedSlice.actions\r\n\r\nexport default rotatedSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const hoveredMenuItemSlice = createSlice({\r\n  name: 'hoveredMenuItem',\r\n  initialState: {\r\n    value: 'about',\r\n  },\r\n  reducers: {\r\n    setHoveredMenuItem: (state, action) => {\r\n      state.value = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setHoveredMenuItem } = hoveredMenuItemSlice.actions\r\n\r\nexport default hoveredMenuItemSlice.reducer","import {  useDispatch } from 'react-redux';\nimport { toggleRotated } from '../../redux/rotatedSlice';\nimport { setHoveredMenuItem } from '../../redux/hoveredMenuItemSlice';\nimport './MenuItem.css';\n\nfunction MenuItem(props) {\n\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"Menu-item\" onClick={() => dispatch(toggleRotated())} onMouseEnter={() => dispatch(setHoveredMenuItem(props.item))}> {props.item.toUpperCase()} </div>\n  );\n}\n\nexport default MenuItem;\n","export default __webpack_public_path__ + \"static/media/arrow_back_ios_white_24dp.dee96783.svg\";","import { toggleRotated } from '../../redux/rotatedSlice';\nimport backIcon from '../../resources/arrow_back_ios_white_24dp.svg'\nimport { useDispatch } from 'react-redux';\nimport './BackButton.css';\n\nfunction BackButton() {\n\n  const dispatch = useDispatch()\n\n  return (\n          <img src={backIcon} onClick={() => dispatch(toggleRotated())} className=\"back-button\" alt=\"\" />\n  );\n}\n\nexport default BackButton;\n","import { animated, useChain, useSpring, useSpringRef } from 'react-spring'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setAnimating } from './redux/animatingSlice';\nimport logoBack from './resources/logo_and_back.svg';\nimport redBackground from './resources/red_back.svg';\nimport MenuItem from './components/menu-item/MenuItem';\nimport BackButton from './components/back-button/BackButton';\nimport './App.css';\n\nfunction App() {\n\n  const dispatch = useDispatch()\n\n  const rotated = useSelector((state) => state.rotated.value)\n  const animating = useSelector((state) => state.animating.value)\n  const hoveredMenuItem = useSelector((state) => state.hoveredMenuItem.value)\n\n  const underlineStyleByMenuItem = {\n    'projects': {marginLeft: '13vw', width: '9vw'},\n    'about': {marginLeft: '2vw', width: '6vw'},\n    'contact': {marginLeft: '26.4vw', width: '8.5vw'},\n  }\n\n  const disappearRef = useSpringRef()\n  const rotateRef = useSpringRef()\n  const slideRef = useSpringRef()\n\n  const rotateProps = useSpring({\n    to: {rotateZ: rotated ? -45 : 0.00001},\n    ref: rotateRef,\n    onStart: () => dispatch(setAnimating(true)),\n    onRest: () => dispatch(setAnimating(false))\n  })\n\n  const slideProps = useSpring({\n    to: {\n      translateX: rotated ? '40vw' : '0vw',\n      translateY: rotated ? '40vw' : '0vw'\n    },\n    ref: slideRef,\n    onStart: () => dispatch(setAnimating(true)),\n    onRest: () => dispatch(setAnimating(false))\n  })\n\n  const disappearProps = useSpring({\n    to: {\n      translateY: rotated ? '10vw' : '0vw',\n      translateX: rotated ? '-10vw' : '0vw',\n      rotateZ: '45deg'\n    },\n    ref: disappearRef,\n    onStart: () => dispatch(setAnimating(true)),\n    onRest: () => dispatch(setAnimating(false))\n  })\n\n  const underlineProps = useSpring({\n    to: underlineStyleByMenuItem[hoveredMenuItem]\n  })\n\n  useChain(rotated ? [disappearRef, rotateRef, slideRef] : [slideRef, rotateRef, disappearRef], [0, 0.2, 0.5])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <animated.div style={disappearProps} className={(rotated || animating) ? \"Menu-z0\" : \"Menu-z5\"} >\n          <MenuItem item='about' />\n          <MenuItem item='projects' />\n          <MenuItem item='contact' />\n          <animated.div style={underlineProps} className=\"underline\"></animated.div>\n        </animated.div>\n        <animated.div style={rotateProps} className=\"background-graphics\">\n          <BackButton />\n          <div className=\"Page-title\"> {hoveredMenuItem.toUpperCase()} </div>\n          <img src={redBackground} className=\"red-back\" alt=\"\" />\n          <animated.div style={slideProps}> \n            <img src={logoBack} className=\"logo-back\" alt=\"\" />\n          </animated.div>\n        </animated.div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport rotatedReducer from './rotatedSlice'\r\nimport animatingReducer from './animatingSlice'\r\nimport hoveredMenuItemReducer from './hoveredMenuItemSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    rotated: rotatedReducer,\r\n    animating: animatingReducer,\r\n    hoveredMenuItem: hoveredMenuItemReducer\r\n  },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}